matrix:
  include:
    - language: objective-c
      os: osx
      osx_image: xcode10.1
      xcode_project: ./publicreactnativeapp.xcodeproj
      xcode_scheme: publicreactnativeapp
      node_js: false
      sudo: required
      env:
        - LC_ALL=en_US.UTF-8
        - LANG=en_US.UTF-8
        - NODE_OPTIONS="--max-old-space-size=4096"
      before_install:
        - nvm install 11.6
        - rvm install 2.6.0
        - rvm --default use 2.6.0
        - gem update --system
        - gem install bundler
        - gem install fastlane
        - pwd
        # - ls ~/.ssh/
        # - openssl aes-256-cbc -K $encrypted_a1c7f21d2e08_key -iv $encrypted_a1c7f21d2e08_iv -in deploy_key.enc -out ~/.ssh/deploy_key -d
        # - mv deploy_key.pub ~/.ssh/deploy_key.pub
        # - ls ~/.ssh/
        # - echo -e "Host github.com\n\tHostName github.com\n\tncmd git\n\tIdentityFile ~/.ssh/deploy_key\n" >> ~/.ssh/config
        # - ssh-keyscan github.com >> ~/.ssh/known_hosts
        # - chmod 600 ~/.ssh/deploy_key
      install:
        - pwd
        - npm install
      script:
        - pwd
        - cd ./ios && bundle install
        # - echo $FASTLANE_SESSION
        # - var=$(cat ./session.txt) && export FASTLANE_SESSION=$var
        # - echo $FASTLANE_SESSION
        - bundle update
        - echo $FASTLANE_PW | fastlane fastlane-credentials add --username cchong.vise@gmail.com
        - fastlane spaceauth -u cchong.vise@gmail.com > test.text
        - FASTLANE_SESSION=$(sed '14q;d' ./test.txt)
        - echo $FASTLANE_SESSION
        # - bundle exec fastlane ios travisenable
        - bundle exec fastlane ios travismatch
        - nohup bundle exec fastlane ios travisgym &
        - for i in $(seq 1 10); do sleep 60; echo $i; done
        - bundle exec fastlane ios travisupload
  exclude:
    - language: android
      jdk: oraclejdk8
      sudo: required
      dist: precise
      env:
        - LC_ALL=en_US.UTF-8
        - LANG=en_US.UTF-8
      before_cache:
        - rm -f $HOME/.gradle/caches/modules-2/modules-2.lock
        - rm -fr $HOME/.gradle/caches/*/plugin-resolution/
      cache:
        yarn: true
        directories:
          - $HOME/.gradle/caches/
          - $HOME/.gradle/wrapper/
          - node_modules
      android:
        components:
          - platform-tools
          - tools
          - build-tools-27.0.3
          - android-27
          - extra-android-m2repository
          - extra-google-google_play_services
          - extra-google-m2repository
          - sys-img-armeabi-v7a-android-28
      licenses:
        - android-sdk-preview-license-.+
        - android-sdk-license-.+
        - google-gdk-license-.+
      before_install:
        - nvm install 11.6
        - node --version
        - PATH="/bin:$PATH" rvm use 2.6.0 --install --binary --fuzzy
        - ruby --version
        - chmod +x ./android/gradlew
        - pwd
        - gem update --system
        - gem install bundler
        - pwd
        - openssl aes-256-cbc -K $encrypted_6ddb6ecb5ee7_key -iv $encrypted_6ddb6ecb5ee7_iv -in ./android/app/my-release-key.keystore.enc -out ./android/app/my-release-key.keystore -d
        - openssl aes-256-cbc -K $encrypted_6ddb6ecb5ee7_key -iv $encrypted_6ddb6ecb5ee7_iv -in ./android/app/my-release-key.keystore.enc -out ./android/my-release-key.keystore -d
        - cd android && bundle install && bundle update && ./gradlew clean
      install:
        - npm install
      script:
        - pwd
        - ls
        - ls ./app
        - fastlane supply init
        - bundle exec fastlane test
        - bundle exec fastlane build
      after_script:
        - chmod +x ./android/gradlew
        - ./gradlew assembleRelease
      branches:
        only:
        - master