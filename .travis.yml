# cache:
#   yarn: true
#   directories:
#     - $HOME/.yarn-cache
#     - $HOME/.gradle/caches/
#     - $HOME/.gradle/wrapper/
#     - node_modules

matrix:
  include:
    - language: objective-c
      os: osx
      osx_image: xcode10.1
      xcode_project: ./publicreactnativeapp.xcodeproj
      xcode_scheme: publicreactnativeapp
      node_js: false
      sudo: required
      env:
        # required by fastlane
        - LC_ALL=en_US.UTF-8
        - LANG=en_US.UTF-8
        # increase node space just in case
        - NODE_OPTIONS="--max-old-space-size=4096"
      before_install:
        # Setting up environment similar to local environment
        - nvm install 11.6
        - rvm install 2.6.0
        - travis_retry npm install -g yarn
        - rvm --default use 2.6.0
        - brew update
        - gem update --system
        - gem install bundler
        - gem install fastlane
        - pwd
        # Decrypt key to download certificate from a private certificate repository
        - ls ~/.ssh/
        - cd ./ios && openssl aes-256-cbc -K $encrypted_135108afd44f_key -iv $encrypted_135108afd44f_iv -in deploy_key.enc -out ~/.ssh/deploy_key -d
        - cp deploy_key.pub ~/.ssh/deploy_key.pub
        - ls ~/.ssh/
        - echo -e "Host github.com\n\tHostName github.com\n\tncmd git\n\tIdentityFile ~/.ssh/deploy_key\n" >> ~/.ssh/config
        - ssh-keyscan github.com >> ~/.ssh/known_hosts
        - chmod 600 ~/.ssh/deploy_key
        - cd ..
      install:
        # using yarn instead of npm install because project would not build properly in travis
        - pwd
        - yarn install
        # required to use react-native 
        - npm install -g react-native-cli
        # Adds missing main.jsbundle file when react-native project is created
        - react-native bundle --entry-file='index.js' --bundle-output='./ios/main.jsbundle' --dev=false --platform='ios'
      script:
        - pwd
        # try running app in background?
        - nohup react-native run-ios &
        - cd ./ios/
        # Install all gemfile requirements and allows faster fastlane performance
        - bundle install
        # Setting fastlane session to bypass 2-factor for apple account; this session much be changed every build or else it will fail whole build process
        - echo $FASTLANE_SESSION
        - var=$(cat ./session.txt) && export FASTLANE_SESSION=$var
        # Confirm session environment variable is set
        - echo $FASTLANE_SESSION
        - bundle update
        # - bundle exec fastlane ios travisenable
        - ls /Users/travis/Library/Keychains/
        # - bundle exec fastlane ios travismatch
        - ls /Users/travis/Library/Keychains/
        - nohup bundle exec fastlane ios travisgym &
        - pwd
        - for i in $(seq 1 10); do sleep 60; echo $i; done
        - ls
        - bundle exec fastlane ios travisupload
        # - export FASTLANE_SESSION=$(sed '14q;d' ./session.txt)
        # - echo $FASTLANE_PW | bundle exec fastlane fastlane-credentials add --username cchong.vise@gmail.com
        # - bundle exec fastlane spaceauth -u cchong.vise@gmail.com > test.txt
        # - FASTLANE_SESSION=$(sed '7q;d' ./session.txt)
        # | sed 's/^.......//' ./test.txt > test.txt | sed 's/......$//' ./test.txt > test.txt
        # REGEX_TEST=\'/[^\']--\\\\n.*\\*1\\\\n/g\'
        # - echo $FASTLANE_SESSION
  # exclude:
    - language: android
      jdk: oraclejdk8
      sudo: required
      dist: precise
      env:
        - LC_ALL=en_US.UTF-8
        - LANG=en_US.UTF-8
      before_cache:
        - rm -f $HOME/.gradle/caches/modules-2/modules-2.lock
        - rm -fr $HOME/.gradle/caches/*/plugin-resolution/
      cache:
        yarn: true
        directories:
          - $HOME/.gradle/caches/
          - $HOME/.gradle/wrapper/
          - node_modules
      android:
        components:
          - platform-tools
          - tools
          - build-tools-27.0.3
          - android-27
          - extra-android-m2repository
          - extra-google-google_play_services
          - extra-google-m2repository
          - sys-img-armeabi-v7a-android-28
      licenses:
        - android-sdk-preview-license-.+
        - android-sdk-license-.+
        - google-gdk-license-.+
      before_install:
        - nvm install 11.6
        - node --version
        - PATH="/bin:$PATH" rvm use 2.6.0 --install --binary --fuzzy
        - ruby --version
        - chmod +x ./android/gradlew
        - pwd
        - gem update --system
        - gem install bundler
        - pwd
        - openssl aes-256-cbc -K $encrypted_6ddb6ecb5ee7_key -iv $encrypted_6ddb6ecb5ee7_iv -in ./android/app/my-release-key.keystore.enc -out ./android/app/my-release-key.keystore -d
        - openssl aes-256-cbc -K $encrypted_6ddb6ecb5ee7_key -iv $encrypted_6ddb6ecb5ee7_iv -in ./android/app/my-release-key.keystore.enc -out ./android/my-release-key.keystore -d
        - cd android && bundle install && bundle update && ./gradlew clean
      install:
        - npm install
      script:
        - pwd
        - ls
        - ls ./app
        - fastlane supply init
        - bundle exec fastlane test
        - bundle exec fastlane build
      after_script:
        - chmod +x ./android/gradlew
        - ./gradlew assembleRelease
      branches:
        only:
        - master